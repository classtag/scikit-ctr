
# What Python version is installed where:
# http://www.appveyor.com/docs/installed-software#python

environment:
  matrix:

    - PYTHON: "C:\\Python36"
      TOX_ENV: "py36"

    - PYTHON: "C:\\Python36-x64"
      TOX_ENV: "py36"

init:
  - set PATH=%PYTHON%;%PYTHON%\Scripts;C:\MinGW\msys\1.0\bin;%PATH%
  - "git config --system http.sslcainfo \"C:\\Program Files\\Git\\mingw64\\ssl\\certs\\ca-bundle.crt\""
  - "%PYTHON%/python -V"
  - "%PYTHON%/python -c \"import struct;print(8 * struct.calcsize(\'P\'))\""

install:
  - "%PYTHON%/Scripts/easy_install -U pip"
  - "%PYTHON%/Scripts/pip install -r requirements_dev.txt"

build: false  # Not a C# project, build stuff at the test step instead.

test_script:
  - "%PYTHON%/Scripts/tox -e %TOX_ENV%"

after_test:
  - "%PYTHON%/python setup.py --command-packages wheel bdist_wheel"
  - ps: "ls dist"

artifacts:
  - path: dist\*

on_success:
  # Upload the generated wheel package to Rackspace
  - "python -m scikit-ctr upload --local-folder=dist sklearn-windows-wheels"

notifications:
  - provider: Webhook
    url: https://webhooks.gitter.im/e/635bfe51dbbc0a96b68b
    on_build_success: false
    on_build_failure: True

cache:
  # Use the appveyor cache to avoid re-downloading large archives such
  # the MKL numpy and scipy wheels mirrored on a rackspace cloud
  # container, speed up the appveyor jobs and reduce bandwidth
  # usage on our rackspace account.
  - '%APPDATA%\pip\Cache'
